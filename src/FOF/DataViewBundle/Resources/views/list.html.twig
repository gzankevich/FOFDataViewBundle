{% block filters %}
    <div class="data_view_filters">
        <h2>Filters</h2>

        <p id="no_filters_defined"
            {% if form.filters is empty %}
            style="display: none"
            {% endif %}
            >
            No filters added.
        </p>

        {{ block('filter_controls') }}

        <button type="submit" id="add_filter" name="add_filter" value="add">Add</button>
        <button type="submit" id="update" name="update" value="update">Update</button>
    </div>
{% endblock filters %}


{% block filter_controls %}
    <div id="filters">
        {{ form_row(form._token) }}
        {% for filter in form.filters %}
            <div class="filter">
                {{ form_row(filter.column_name) }}
                {{ form_row(filter.comparison_type) }}
                {{ form_row(filter.compare_value) }}
                <button type="submit" class="remove_filter">Remove</button>
            </div>
        {% endfor %}
    </div>
{% endblock filter_controls %}

{% block filter_prototype %}
    <div id="filter_prototype" style="display:none">
        <div class="filter">
            {# twig traits (i.e. this file) cannot use form themes or macros, so we must repeat ourselves #}
            {{ form_row(form.filters.get('prototype').column_name) }}
            {{ form_row(form.filters.get('prototype').comparison_type) }}
            {{ form_row(form.filters.get('prototype').compare_value) }}
            <button type="submit" class="remove_filter">Remove</button>
        </div>
    </div>
{% endblock filter_prototype %}

{% block table %}
    <h2>Results</h2>
    <table class="data_view_table">
        <thead>
            {{ block('headings') }}
        </thead>
        <tbody>
            {{ block('results') }}
        </tbody>
    </table>
{% endblock table %}

{% block pagination %}
    <div class="data_view_pagination">
        <span>Found {{ dataView.pager.nbResults }} records</span>

        {% if dataView.pager.haveToPaginate %}
            
            <button type="submit" id="pagination_first_page" name="pagination_first_page" value="pagination_first_page" 
                {% if dataView.pager.currentPage < 2 %}disabled="disabled"{% endif %}>
                First
            </button>
            <button type="submit" id="pagination_previous_page" name="pagination_previous_page" value="pagination_previous_page"
                {% if dataView.pager.currentPage < 2 %}disabled="disabled"{% endif %}>
                Previous
            </button>


            <span id="current_page_number">{{ dataView.pager.currentPage }}</span>

            <button type="submit" id="pagination_next_page" name="pagination_next_page" value="pagination_next_page">Next</button>
            <button type="submit" id="pagination_last_page" name="pagination_last_page" value="pagination_last_page">Last</button>
        {% endif %}
    </div>
{% endblock pagination %}


{# the blocks below are used by the blocks above #}
<hr/>
{% block headings %}
    <tr>
        {% for column in dataView.columns %}
            <th>
                {% if column.isSortable %}
                    <button type="submit" name="sort_{{ column.templateFriendlyPropertyPath }}" value="{{ column.inverseSortOrder }}">{{ column.label }}</button>
                {% else %}
                   {{ column.label }} 
                {% endif %}
            </th>
        {% endfor %}
    </tr>
{% endblock headings %}

{% block results %}
    {% for result in dataView.pager %}
        <tr>
            {% for column in dataView.columns %}
                <td>
                    {% if column.twigBlockName is not null %}
                        {{ block(column.twigBlockName) }}
                    {% else %}
                        {{ attribute(dataView, 'getEntityValueByPropertyPath', [result, column.displayPropertyPath]) }}
                    {% endif %}
                </td>
            {% endfor %}
        </tr>
    {% endfor %}
{% endblock results %}

{% block script %}
    <script type="text/javascript">
        document.getElementById('add_filter').onclick = function() {
            var prototype = document.getElementById('filter_prototype').innerHTML;

            // subtract one from length to account for the prototype
            prototype = prototype.replace(/__name__/g, document.querySelectorAll(".filter").length - 1);

            var prototypeElement = document.createElement('div');
            prototypeElement.innerHTML = prototype;

            // prepend the new filter
            document.getElementById('filters').insertBefore(prototypeElement, document.getElementById('filters').firstChild);

            document.querySelectorAll('.remove_filter')[0].onclick = removeFilter;

            return false;
        };

        function removeFilter()
        {
            this.parentNode.parentNode.removeChild(this.parentNode);
            return false;
        }
    </script>
{% endblock script %}
